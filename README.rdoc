= AttrCleaner

Cleans up your model attributes. Strips leading and trailing space, and turns empty
strings into nil.

== Installing

For Rails 3 with ActiveRecord just add this to your Gemfile:

  gem "attr_cleaner"
  
Attr cleaner will play nice with any ORM that writes attributes
via a method called `write_attribute`.
To get AttrCleaner working with your ORM add this to an initializer file:
  
  MyOrm.send(:include, AttrCleaner::ModelMixin)
  
or, include it into your models:
  
  include AttrCleaner::ModelMixin
  
AttrCleaner can also be used outside of Rails if ActiveSupport 3 is avalable. If you're using
AttrCleaner outside of Rails, and it detect ActiveRecord is allready loaded, it will include
itself into ActiveRecod. Make sure ActiveRecord is loaded first.

== Usage

Simply add this to any model you want to clean:

  attr_cleaner

You can restrict the cleaning to specific attributes with `:only` and `:except`

  attr_cleaner :only => :name
  attr_cleaner :only => [:name, :age]
  attr_cleaner :except => :age
  attr_cleaner :except => [:age, :price]
  
Attributes to be cleaned can be inherited, so sometimes you may need both :only and :except

  # Remove :age from the list, add :name
  attr_cleaner :only => :name, :except => :age
  
== Copyright

Copyright (c) 2010 Thomas Drake-Brockman. See LICENSE for details.